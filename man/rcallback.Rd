% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rdevice.R
\name{rcallback}
\alias{rcallback}
\title{Callback for the rdevice}
\usage{
rcallback(device_call, state, args)
}
\arguments{
\item{device_call}{name of device call}

\item{state}{list of rdata, dd and gc}

\item{args}{args to the device call}
}
\description{
This shim sits between the C++ world and the R world. I.e. this R function
gets called from the C++ code.  Calls are then made from
here to the R callback function.
}
\details{
This shim should do the heavy lifting in terms of error checking to ensure that errors
aren't propogated back to the C++ execution (because if that happens we
get a segmentation fault!)

It should also do sanity checking of return objects i.e. is 'rdata' still a list?

TODO: Could then do signatures of the input state and the return values and
only include them in the return object if things have changed?
}
